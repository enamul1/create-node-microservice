# Comma-separated list of supported environments, e.g.: qa1,qa2,test1,etc.
# The configurations below are then prefixed by those keys. This allows the
# service to function as a vhost to multiple endpoints, both from the data/apis
# it consumes up to the apis it exposes.
ENVIRONMENTS=LOCAL

# Application port the service will start on
PORT=8080

# MySQL connections for various vhosts (see: LOCALS)
LOCAL_MYSQL_HOST=db
LOCAL_MYSQL_USER=root
LOCAL_MYSQL_PASSWORD=tiptop123
LOCAL_MYSQL_DATABASE=fieldnation

# Redis connections for various vhosts (see: LOCALS)
# If you don't plan on using Redis, see src/redis.js for removal instructions
LOCAL_REDIS=redis://redis:6379

# RabbitMQ connections for vhosts. If you don't plan on using RabbitMQ, see
# src/rabbit.js for removal instructions
# Note: vhost will be auto-appended to the following value (e.g.: + /qa1)
LOCAL_RABBITMQ=amqp://guest:guest@rabbit:5672
# When set, it will purge all messages rather than process them
# This can be used to quickly clear backlogged queues
LOCAL_RABBITMQ_PURGE=0
# If you use RabbitMQ as a consumer, this queue will be created and connected to
# through src/rabbitWorker.js
LOCAL_RABBITMQ_QUEUE="myqueue"
